{"version":3,"file":"SortableHeaderCell.js","sourceRoot":"","sources":["../../src/headerCells/SortableHeaderCell.tsx"],"names":[],"mappings":";;AAAA,+BAA0B;AAI1B,IAAM,SAAS,GAAG;IAChB,GAAG,EAAE,QAAQ;IACb,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,EAAE;CACA,CAAC;AAaX,SAAwB,kBAAkB,CAAQ,EAMnC;QALb,MAAM,YAAA,EACN,MAAM,YAAA,EACN,UAAU,gBAAA,EACV,aAAa,mBAAA,EACb,QAAQ,cAAA;IAER,aAAa,GAAG,UAAU,KAAK,MAAM,CAAC,GAAG,IAAI,aAAa,IAAI,MAAM,CAAC;IACrE,SAAS,OAAO;QACd,IAAI,CAAC,MAAM;YAAE,OAAO;QACpB,IAAM,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,IAAI,KAAK,CAAC;QAChE,IAAI,SAAwB,CAAC;QAC7B,QAAQ,aAAa,EAAE;YACrB,KAAK,KAAK;gBACR,SAAS,GAAG,mBAAmB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;gBAClD,MAAM;YACR,KAAK,MAAM;gBACT,SAAS,GAAG,mBAAmB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;gBACjD,MAAM;YACR;gBACE,SAAS,GAAG,mBAAmB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;gBACjD,MAAM;SACT;QACD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAChC,CAAC;IAED,OAAO,CACL,wCAAM,SAAS,EAAC,sBAAsB,EAAC,OAAO,EAAE,OAAO;QACrD,wCAAM,SAAS,EAAC,sBAAsB,IAAE,QAAQ,CAAQ;QACxD,4CAAO,SAAS,CAAC,aAAa,CAAC,CAAQ,CAClC,CACR,CAAC;AACJ,CAAC;AAhCD,qCAgCC","sourcesContent":["import React from 'react';\nimport { HeaderCellProps } from '../HeaderCell';\nimport { SortDirection } from '../enums';\n\nconst SORT_TEXT = {\n  ASC: '\\u25B2',\n  DESC: '\\u25BC',\n  NONE: ''\n} as const;\n\ntype SharedHeaderCellProps<R, SR> = Pick<HeaderCellProps<R, SR>,\n  | 'column'\n  | 'sortColumn'\n  | 'sortDirection'\n  | 'onSort'\n>;\n\nexport interface Props<R, SR> extends SharedHeaderCellProps<R, SR> {\n  children: React.ReactNode;\n}\n\nexport default function SortableHeaderCell<R, SR>({\n  column,\n  onSort,\n  sortColumn,\n  sortDirection,\n  children\n}: Props<R, SR>) {\n  sortDirection = sortColumn === column.key && sortDirection || 'NONE';\n  function onClick() {\n    if (!onSort) return;\n    const sortDescendingFirst = column.sortDescendingFirst || false;\n    let direction: SortDirection;\n    switch (sortDirection) {\n      case 'ASC':\n        direction = sortDescendingFirst ? 'NONE' : 'DESC';\n        break;\n      case 'DESC':\n        direction = sortDescendingFirst ? 'ASC' : 'NONE';\n        break;\n      default:\n        direction = sortDescendingFirst ? 'DESC' : 'ASC';\n        break;\n    }\n    onSort(column.key, direction);\n  }\n\n  return (\n    <span className=\"rdg-header-sort-cell\" onClick={onClick}>\n      <span className=\"rdg-header-sort-name\">{children}</span>\n      <span>{SORT_TEXT[sortDirection]}</span>\n    </span>\n  );\n}\n"]}