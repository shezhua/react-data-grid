{"version":3,"file":"ToggleGroupFormatter.js","sourceRoot":"","sources":["../../src/formatters/ToggleGroupFormatter.tsx"],"names":[],"mappings":";;;AAAA,+BAA0B;AAE1B,kCAAuC;AAEvC,SAAgB,oBAAoB,CAAQ,EAKf;QAJ3B,QAAQ,cAAA,EACR,UAAU,gBAAA,EACV,cAAc,oBAAA,EACd,WAAW,iBAAA;IAEX,IAAM,OAAO,GAAG,mBAAW,CAAkB,cAAc,CAAC,CAAC;IAE7D,SAAS,aAAa,CAAC,EAA6C;YAA3C,GAAG,SAAA;QAC1B,IAAI,GAAG,KAAK,OAAO,EAAE;YACnB,WAAW,EAAE,CAAC;SACf;IACH,CAAC;IAED,IAAM,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,CAAC;IAEjE,OAAO,CACL,wCACE,GAAG,EAAE,OAAO,EACZ,SAAS,EAAC,wBAAwB,EAClC,QAAQ,EAAE,CAAC,CAAC,EACZ,SAAS,EAAE,aAAa;QAEvB,QAAQ;QACT,uCAAK,OAAO,EAAC,UAAU,EAAC,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,GAAG,EAAC,SAAS,EAAC,WAAW;YACjE,wCAAM,CAAC,EAAE,CAAC,GAAI,CACV,CACD,CACR,CAAC;AACJ,CAAC;AA7BD,oDA6BC","sourcesContent":["import React from 'react';\nimport { GroupFormatterProps } from '../types';\nimport { useFocusRef } from '../hooks';\n\nexport function ToggleGroupFormatter<R, SR>({\n  groupKey,\n  isExpanded,\n  isCellSelected,\n  toggleGroup\n}: GroupFormatterProps<R, SR>) {\n  const cellRef = useFocusRef<HTMLSpanElement>(isCellSelected);\n\n  function handleKeyDown({ key }: React.KeyboardEvent<HTMLSpanElement>) {\n    if (key === 'Enter') {\n      toggleGroup();\n    }\n  }\n\n  const d = isExpanded ? 'M1 1 L 7 7 L 13 1' : 'M1 7 L 7 1 L 13 7';\n\n  return (\n    <span\n      ref={cellRef}\n      className=\"rdg-group-cell-content\"\n      tabIndex={-1}\n      onKeyDown={handleKeyDown}\n    >\n      {groupKey}\n      <svg viewBox=\"0 0 14 8\" width=\"14\" height=\"8\" className=\"rdg-caret\">\n        <path d={d} />\n      </svg>\n    </span>\n  );\n}\n"]}